def binarySearch(array, target, si, ei):
    if si > ei:
        return -1
    middle_element = (si + ei) // 2
    if array[middle_element] == target:
        return middle_element
    elif target < array[middle_element]:
        return binarySearch(array, target, si, middle_element - 1)
    else:
        return binarySearch(array, target, middle_element + 1, ei)

import time
import numpy as np
import matplotlib.pyplot as plt

elements = np.array([i * 1000 for i in range(1, 40)])
plt.xlabel('List length')
plt.ylabel('Time Complexity')
times = list()

for i in range(1, 40):
    start = time.time()
    a = np.random.randint(1000, size=i * 1000)
    binarySearch(a, 1, 0, len(a) - 1)
    end = time.time()
    times.append(end - start)
    print("Time Taken to Binary Search in ", i * 1000, "Elements is", end - start, "s")
end_all = time.time()
x
plt.plot(elements, times, label="Binary Sort")
plt.grid()
plt.legend()
plt.show()